<Window x:Class="overlay_popup.ConfigurationWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:overlay_popup" d:DataContext="{d:DesignInstance Type=local:ConfigurationViewModel}"
        mc:Ignorable="d"
        Title="Configure" Height="600" Width="1000">
    <DockPanel Margin="5">

        <DockPanel DockPanel.Dock="Left" Width="100">
            <StackPanel Orientation="Horizontal" DockPanel.Dock="Bottom">
                <Button Margin="0,2" Width="20" Height="20"><Bold>+</Bold></Button>
                <Button Margin="2,2" Width="20" Height="20"><Bold>-</Bold></Button>
            </StackPanel>
            <ListView ItemsSource="{Binding Path=Menus}" IsSynchronizedWithCurrentItem="True" SelectionChanged="ListView_SelectionChanged">
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Path=Name}"/>
                    </DataTemplate>
                </ListView.ItemTemplate>

            </ListView>
        </DockPanel>

        <StackPanel Orientation="Horizontal" DockPanel.Dock="Bottom" FlowDirection="RightToLeft">
            <Button Margin="2,0" Content="OK" IsDefault="True" Click="OK_Click" />
            <Button Margin="2,0" Content="Cancel" IsCancel="True" />
        </StackPanel>

        <Grid Margin="2,0,0,0" DataContext="{Binding Path=Menus/}">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition />
                <RowDefinition Height="auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="350"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <Grid Grid.Row="0" Grid.ColumnSpan="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <Label Grid.Row="0" Grid.Column="0">Name</Label>
                <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding Path=Name}"
                         IsReadOnly="{Binding Path=IsReadOnly}"
                         ></TextBox>
            </Grid>

            <UniformGrid DataContext="{Binding Path=Buttons}" Name="ButtonGrid" Columns="5" Rows="5" Grid.Row="1" Grid.Column="0" Width="250" Height="250">

            </UniformGrid>

            <TabControl Grid.Row="1" Grid.Column="2">
                <TabItem>
                    <TabItem.Header>General</TabItem.Header>
                    <ScrollViewer HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Auto" Grid.Row="1" Grid.Column="1" DataContext="{Binding Path=Buttons/}" Margin="0,5,0,5">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="220"/>
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>

                            <Label Grid.Row="0" Grid.Column="0">Visible</Label>
                            <CheckBox Grid.Row="0" Grid.Column="1" IsChecked="{Binding Path=IsVisible}"/>

                            <Label Grid.Row="1" Grid.Column="0">Content type</Label>
                            <StackPanel Grid.Row="1" Grid.Column="1" Orientation="Vertical">
                                <RadioButton Click="ContentFormatRadio_Click" Content="Text" Tag="PlainText" IsChecked="{Binding Path=IsPlainText, Mode=OneWay}"/>
                                <RadioButton Click="ContentFormatRadio_Click" Content="XAML (Fragment)" Tag="XamlFragment"  IsChecked="{Binding Path=IsXamlFragment, Mode=OneWay}"/>
                                <RadioButton Click="ContentFormatRadio_Click" Content="XAML (Full)" Tag="Xaml" IsChecked="{Binding Path=IsXaml, Mode=OneWay}"/>
                            </StackPanel>

                            <StackPanel Grid.Row="2" Grid.Column="0">
                                <Label>Button content</Label>
                                <TextBlock Foreground="Red" TextWrapping="Wrap" TextTrimming="CharacterEllipsis" MaxHeight="100"
                                   MaxWidth="200">
                                    <TextBlock.Style>
                                        <Style>
                                            <Setter Property="UIElement.Visibility" Value="Hidden"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=HasXamlError, Mode=OneWay}" Value="true">
                                                    <Setter Property="UIElement.Visibility" Value="Visible"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                            <Bold>Error:</Bold> <Run Text="{Binding XamlErrorMessage, Mode=OneWay}"/>
                                </TextBlock>
                            </StackPanel>
                            <TextBox Grid.Row="2" Grid.Column="1" Height="150" Width="300" HorizontalAlignment="Left"
                             AcceptsReturn="True" AcceptsTab="True" TextWrapping="NoWrap"
                             HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto"
                             Text="{Binding Path=RawText}"/>

                            <Label Grid.Row="3" Grid.Column="0">Preview</Label>
                            <Border Grid.Row="3" Grid.Column="1" Width="150" Height="80" BorderThickness="2" BorderBrush="Silver"
                            Margin="10"
                            Background="{Binding BackgroundColourBrush}">
                                <ContentPresenter Content="{Binding Content}" VerticalAlignment="Center" HorizontalAlignment="Center">
                                    <ContentPresenter.Style>
                                        <Style>
                                            <Setter Property="TextBlock.Foreground" Value="{Binding ForegroundColourBrush}"/>
                                        </Style>
                                    </ContentPresenter.Style>
                                </ContentPresenter>
                            </Border>

                            <Label Grid.Row="4" Grid.Column="0">Action</Label>
                            <StackPanel Grid.Row="4" Grid.Column="1">
                                <RadioButton GroupName="ActionStyle" IsChecked="{Binding IsNoAction, Mode=OneWay}" Checked="ActionModeNoOp_Click" >No action</RadioButton>
                                <RadioButton GroupName="ActionStyle" IsChecked="{Binding IsSelectMenu, Mode=OneWay}" Checked="ActionModeMenu_Click">Switch to menu</RadioButton>
                                <RadioButton GroupName="ActionStyle" IsChecked="{Binding IsPerformTask, Mode=OneWay}" Checked="ActionModeActivity_Click">Perform action</RadioButton>

                                <ListBox Name="TargetMenuList" Visibility="{Binding MenuListVisibility}"
                                         ItemsSource="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.Menus}">
                                    
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Path=Name}" />
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>

                                <Border Name="ActionPanel" BorderThickness="0">
                                    <ContentPresenter Visibility="{Binding Path=ActionVisibility}"
                                                      Content="{Binding Path=Action.ConfigElement}"
                                                      DataContext="{Binding Path=Action}" />
                                </Border>
                                
                            </StackPanel>
                        </Grid>
                    </ScrollViewer>
                </TabItem>
                <TabItem>
                    <TabItem.Header>Appearance</TabItem.Header>
                    <DockPanel>
                        <StackPanel Orientation="Horizontal" DockPanel.Dock="Top">
                            <Button Margin="2,5" Padding="2" Content="Copy button style" Width="auto" Click="CopyButtonStyle_Click"/>
                            <Button Margin="2,5" Padding="2" Content="Paste button style" Width="auto" Click="PasteButtonStyle_Click"
                                    IsEnabled="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.HasClipboardButton}"/>
                        </StackPanel>
                        <ScrollViewer HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Auto" Grid.Row="1" Grid.Column="1" DataContext="{Binding Path=Buttons/}" Margin="0,5,0,5">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="220"/>
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                </Grid.RowDefinitions>

                                <Label Grid.Row="0" Grid.Column="0">Background colour:</Label>
                                <DockPanel Grid.Row="0" Grid.Column="1">
                                    <Rectangle DockPanel.Dock="Left" Margin="0,0,10,0" Width="20" Height="15" VerticalAlignment="Center" Fill="{Binding Path=BackgroundColourBrush}" />
                                    <TextBox Text="{Binding Path=BackgroundColour}"></TextBox>
                                </DockPanel>

                                <Label Grid.Row="1" Grid.Column="0">Hover background colour:</Label>
                                <DockPanel Grid.Row="1" Grid.Column="1">
                                    <Rectangle DockPanel.Dock="Left" Margin="0,0,10,0" Width="20" Height="15" VerticalAlignment="Center" Fill="{Binding Path=BackgroundHoverColourBrush}" />
                                    <TextBox Text="{Binding Path=BackgroundHoverColour}"></TextBox>
                                </DockPanel>

                                <Label Grid.Row="2" Grid.Column="0">Pressed background colour:</Label>
                                <DockPanel Grid.Row="2" Grid.Column="1">
                                    <Rectangle DockPanel.Dock="Left" Margin="0,0,10,0" Width="20" Height="15" VerticalAlignment="Center" Fill="{Binding Path=BackgroundPressedColourBrush}" />
                                    <TextBox Text="{Binding Path=BackgroundPressedColour}"></TextBox>
                                </DockPanel>


                                <Label Grid.Row="3" Grid.Column="0">Foreground colour:</Label>
                                <DockPanel Grid.Row="3" Grid.Column="1">
                                    <Rectangle DockPanel.Dock="Left" Margin="0,0,10,0" Width="20" Height="15" VerticalAlignment="Center" Fill="{Binding Path=ForegroundColourBrush}" />
                                    <TextBox Text="{Binding Path=ForegroundColour}"></TextBox>
                                </DockPanel>

                                <Label Grid.Row="4" Grid.Column="0">Hover foreground colour:</Label>
                                <DockPanel Grid.Row="4" Grid.Column="1">
                                    <Rectangle DockPanel.Dock="Left" Margin="0,0,10,0" Width="20" Height="15" VerticalAlignment="Center" Fill="{Binding Path=ForegroundHoverColourBrush}" />
                                    <TextBox Text="{Binding Path=ForegroundHoverColour}"></TextBox>
                                </DockPanel>

                                <Label Grid.Row="5" Grid.Column="0">Pressed foreground colour:</Label>
                                <DockPanel Grid.Row="5" Grid.Column="1">
                                    <Rectangle DockPanel.Dock="Left" Margin="0,0,10,0" Width="20" Height="15" VerticalAlignment="Center" Fill="{Binding Path=ForegroundPressedColourBrush}" />
                                    <TextBox Text="{Binding Path=ForegroundPressedColour}"></TextBox>
                                </DockPanel>

                                <Label Grid.Row="6" Grid.Column="0">Font size:</Label>
                                <DockPanel Grid.Row="6" Grid.Column="1">
                                    <TextBlock DockPanel.Dock="Left" Text="{Binding Path=FontSize}" Margin="0,0,10,0" Width="20"/>
                                    <Slider Minimum="2" Maximum="50" Value="{Binding Path=FontSize}" />
                                </DockPanel>
                                
                                <Label Grid.Row="7" Grid.Column="0">Hover font size:</Label>
                                <DockPanel Grid.Row="7" Grid.Column="1">
                                    <TextBlock DockPanel.Dock="Left" Text="{Binding Path=HoverFontSize}" Margin="0,0,10,0" Width="20"/>
                                    <Slider Minimum="2" Maximum="50" Value="{Binding Path=HoverFontSize}" />
                                </DockPanel>
                                
                                <Label Grid.Row="8" Grid.Column="0">Pressed font size:</Label>
                                <DockPanel Grid.Row="8" Grid.Column="1">
                                    <TextBlock DockPanel.Dock="Left" Text="{Binding Path=PressedFontSize}" Margin="0,0,10,0" Width="20"/>
                                    <Slider Minimum="2" Maximum="50" Value="{Binding Path=PressedFontSize}" />
                                </DockPanel>

                            </Grid>
                        </ScrollViewer>
                    </DockPanel>
                    

                    
                </TabItem>
            </TabControl>
            

        </Grid>

    </DockPanel>
</Window>
