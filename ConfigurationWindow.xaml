<Window x:Class="overlay_popup.ConfigurationWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:overlay_popup" d:DataContext="{d:DesignInstance Type=local:ConfigurationViewModel}"
        mc:Ignorable="d"
        Title="Configure" Height="800" Width="1200" WindowState="Maximized">
    <DockPanel Margin="5">

        <DockPanel DockPanel.Dock="Left" Width="100">
            <StackPanel Orientation="Horizontal" DockPanel.Dock="Bottom">
                <Button Click="MenusAdd_Click" Margin="0,2" Width="20" Height="20"><Bold>+</Bold></Button>
                <Button Click="MenusRemove_Click" Margin="2,2" Width="20" Height="20"><Bold>-</Bold></Button>
            </StackPanel>
            <ListView Name="MenuList" ItemsSource="{Binding Path=Menus}" IsSynchronizedWithCurrentItem="True" SelectionChanged="ListView_SelectionChanged">
                <ListView.ItemTemplate>
                    
                    
                    <DataTemplate>
                        <TextBlock Text="{Binding Path=Name}"/>
                    </DataTemplate>
                </ListView.ItemTemplate>

            </ListView>
        </DockPanel>

        <StackPanel Orientation="Horizontal" DockPanel.Dock="Bottom" FlowDirection="RightToLeft">
            <Button Margin="2,0" Content="OK" IsDefault="True" Click="OK_Click" />
            <Button Margin="2,0" Content="Cancel" IsCancel="True" />
        </StackPanel>

        <Grid Name="EditorGrid" Margin="2,0,0,0" DataContext="{Binding Path=Menus/}">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition />
                <RowDefinition Height="auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="350"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <Grid Grid.Row="0" Grid.ColumnSpan="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                </Grid.RowDefinitions>

                <Label Grid.Row="0" Grid.Column="0">Name</Label>
                <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding Path=Name}"
                         IsReadOnly="{Binding Path=IsReadOnly}"
                         ></TextBox>

                <Label Grid.Row="1" Grid.Column="0">Auto show menu for:</Label>

                <DockPanel Grid.Row="2" Grid.Column="0" MaxHeight="100">
                
                    <StackPanel Orientation="Horizontal" DockPanel.Dock="Bottom">
                        <Button Click="SelectorsAdd_Click" Margin="0,2" Width="20" Height="20">
                            <Bold>+</Bold>
                        </Button>
                        <Button Click="SelectorsRemove_Click" Margin="2,2" Width="20" Height="20">
                            <Bold>-</Bold>
                        </Button>
                    </StackPanel>
                    <ListBox Name="SelectorsList" ItemsSource="{Binding MenuSelectors}"
                             IsSynchronizedWithCurrentItem="True"
                             MaxHeight="100" MinHeight="20" Width="350">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock>
                                    <Run Text="Exe: (re: " />
                                    <Run Run.Text="{Binding Path=UseRegexForExecutable}"/>
                                    <Run Text=") "/>
                                    <Run Text="{Binding Path=ExecutablePattern}"/>
                                    <Run Text=" | Title: (re: "/>
                                    <Run Run.Text="{Binding Path=UseRegexForWindowTitle}"/>
                                    <Run Text=") "/>
                                    <Run Text="{Binding Path=WindowTitlePattern}"/>
                                </TextBlock>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </DockPanel>

                <Grid Grid.Row="2" Grid.Column="1">
                    <Grid.Style>
                        <Style>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=SelectorsList,Path=SelectedIndex}" Value="-1">
                                    <Setter Property="Grid.Visibility" Value="Hidden" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>
                    <Grid.RowDefinitions>
                        <RowDefinition></RowDefinition>
                        <RowDefinition></RowDefinition>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Row="0" Grid.Column="0">Application:</TextBlock>
                    <CheckBox Grid.Row="0" Grid.Column="1" Margin="5,0"
                              IsChecked="{Binding Path=MenuSelectors/UseRegexForExecutable}"
                              >
                        <TextBlock>Use regex</TextBlock>
                    </CheckBox>
                    <TextBox Grid.Row="0" Grid.Column="2" HorizontalAlignment="Stretch"
                             Text="{Binding Path=MenuSelectors/ExecutablePattern}"/>

                    <TextBlock Grid.Row="1" Grid.Column="0" >Window title:</TextBlock>
                    <CheckBox Grid.Row="1" Grid.Column="1" Margin="5,0"
                              IsChecked="{Binding Path=MenuSelectors/UseRegexForWindowTitle}">
                            <TextBlock>Use regex</TextBlock>
                    </CheckBox>
                    <TextBox Grid.Row="1" Grid.Column="2"  HorizontalAlignment="Stretch"
                             Text="{Binding Path=MenuSelectors/WindowTitlePattern}"/>
                </Grid>
            
                
            </Grid>

            <UniformGrid DataContext="{Binding Path=Buttons}" Name="ButtonGrid" Columns="5" Rows="5" Grid.Row="1" Grid.Column="0" Width="250" Height="250">

            </UniformGrid>

            <TabControl Grid.Row="1" Grid.Column="2">
                <TabItem>
                    <TabItem.Header>General</TabItem.Header>
                    <ScrollViewer HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Auto" Grid.Row="1" Grid.Column="1" DataContext="{Binding Path=Buttons/}" Margin="0,5,0,5">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="220"/>
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>

                            <Label Grid.Row="0" Grid.Column="0">Visible</Label>
                            <CheckBox Grid.Row="0" Grid.Column="1" IsChecked="{Binding Path=IsVisible}"/>

                            <Label Grid.Row="1" Grid.Column="0">Content type</Label>

                            <ListBox Grid.Row="1" Grid.Column="1" Name="ContentFormatList" DataContextChanged="ContentFormatList_DataContextChanged"
                                         SelectionChanged="ContentFormatList_SelectionChanged">
                                <ListBoxItem Content="Text" Tag="PlainText" />
                                <ListBoxItem Content="XAML (Fragment)" Tag="XamlFragment"/>
                                <ListBoxItem Content="XAML (Full)" Tag="Xaml" />
                            </ListBox>

                            <StackPanel Grid.Row="2" Grid.Column="0">
                                <Label>Button content</Label>
                                <TextBlock Foreground="Red" TextWrapping="Wrap" TextTrimming="CharacterEllipsis" MaxHeight="100"
                                   MaxWidth="200">
                                    <TextBlock.Style>
                                        <Style>
                                            <Setter Property="UIElement.Visibility" Value="Hidden"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=HasXamlError, Mode=OneWay}" Value="true">
                                                    <Setter Property="UIElement.Visibility" Value="Visible"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                            <Bold>Error:</Bold> <Run Text="{Binding XamlErrorMessage, Mode=OneWay}"/>
                                </TextBlock>
                            </StackPanel>
                            <TextBox Grid.Row="2" Grid.Column="1" Height="150" Width="300" HorizontalAlignment="Left"
                             AcceptsReturn="True" AcceptsTab="True" TextWrapping="NoWrap"
                             HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto"
                             Text="{Binding Path=RawText}"/>

                            <Label Grid.Row="3" Grid.Column="0">Preview</Label>
                            <Border Grid.Row="3" Grid.Column="1" Width="150" Height="80" BorderThickness="2" BorderBrush="Silver"
                            Margin="10"
                            Background="{Binding DefaultStyle.BackgroundColourBrush}">
                                <ContentPresenter Content="{Binding Content}" VerticalAlignment="Center" HorizontalAlignment="Center">
                                    <ContentPresenter.Style>
                                        <Style>
                                            <Setter Property="TextBlock.Foreground" Value="{Binding DefaultStyle.ForegroundColourBrush}"/>
                                        </Style>
                                    </ContentPresenter.Style>
                                </ContentPresenter>
                            </Border>

                            <Label Grid.Row="4" Grid.Column="0">Action</Label>
                            <StackPanel Grid.Row="4" Grid.Column="1">
                                <ListBox Name="ActionModeList" DataContextChanged="ActionModeList_DataContextChanged"
                                         SelectionChanged="ActionModeList_SelectionChanged">
                                    <ListBoxItem Content="No action" Tag="NoAction" />
                                    <ListBoxItem Content="Select menu" Tag="SelectMenu"/>
                                    <ListBoxItem Content="Perform action" Tag="PerformTask" />
                                </ListBox>

                                <ListBox Name="TargetMenuList" Visibility="{Binding MenuListVisibility}"
                                         DataContextChanged="TargetMenuList_DataContextChanged"
                                         SelectionChanged="TargetMenuList_SelectionChanged"
                                         IsSynchronizedWithCurrentItem="True"
                                         >
                                    <ListBox.Resources>
                                        <CollectionViewSource x:Key="TargetMenuListView"
                                                              Source="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.Menus}"
                                            />
                                    </ListBox.Resources>
                                    <ListBox.Style>
                                        <Style>
                                            <Setter Property="ListBox.ItemsSource" Value="{Binding Source={StaticResource TargetMenuListView}}"></Setter>
                                        </Style>
                                    </ListBox.Style>
                                    
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Path=Name}" />
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>

                            </StackPanel>
                            <Border Name="ActionPanel" BorderThickness="0" Grid.ColumnSpan="2" Grid.Row="5" Visibility="{Binding Path=ActionVisibility}">
                                <Grid DataContext="{Binding Action}">
                                    <ContentPresenter Content="{Binding Path=ConfigElement}"/>
                                </Grid>
                            </Border>

                            
                        </Grid>
                    </ScrollViewer>
                </TabItem>
                <TabItem>
                    <TabItem.Header>Appearance</TabItem.Header>
                    <DockPanel>
                        <StackPanel Orientation="Horizontal" DockPanel.Dock="Top">
                            <Button Margin="2,5" Padding="2" Content="Copy button style" Width="auto" Click="CopyButtonStyle_Click"/>
                            <Button Margin="2,5" Padding="2" Content="Paste button style" Width="auto" Click="PasteButtonStyle_Click"
                                    IsEnabled="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.HasClipboardButton}"/>
                        </StackPanel>
                        <ScrollViewer HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Auto" Grid.Row="1" Grid.Column="1" DataContext="{Binding Path=Buttons/}" Margin="0,5,0,5">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="220"/>
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                </Grid.RowDefinitions>

                                <Label Grid.Row="0" Grid.Column="0">Background colour:</Label>
                                <DockPanel Grid.Row="0" Grid.Column="1">
                                    <Rectangle DockPanel.Dock="Left" Margin="0,0,10,0" Width="20" Height="15" VerticalAlignment="Center" Fill="{Binding Path=DefaultStyle.BackgroundColourBrush}" />
                                    <TextBox Text="{Binding Path=DefaultStyle.BackgroundColour}"></TextBox>
                                </DockPanel>

                                <Label Grid.Row="1" Grid.Column="0">Hover background colour:</Label>
                                <DockPanel Grid.Row="1" Grid.Column="1">
                                    <Rectangle DockPanel.Dock="Left" Margin="0,0,10,0" Width="20" Height="15" VerticalAlignment="Center" Fill="{Binding Path=HoverStyle.BackgroundColourBrush}" />
                                    <TextBox Text="{Binding Path=HoverStyle.BackgroundColour}"></TextBox>
                                </DockPanel>

                                <Label Grid.Row="2" Grid.Column="0">Pressed background colour:</Label>
                                <DockPanel Grid.Row="2" Grid.Column="1">
                                    <Rectangle DockPanel.Dock="Left" Margin="0,0,10,0" Width="20" Height="15" VerticalAlignment="Center" Fill="{Binding Path=PressedStyle.BackgroundColourBrush}" />
                                    <TextBox Text="{Binding Path=PressedStyle.BackgroundColour}"></TextBox>
                                </DockPanel>


                                <Label Grid.Row="3" Grid.Column="0">Foreground colour:</Label>
                                <DockPanel Grid.Row="3" Grid.Column="1">
                                    <Rectangle DockPanel.Dock="Left" Margin="0,0,10,0" Width="20" Height="15" VerticalAlignment="Center" Fill="{Binding Path=DefaultStyle.ForegroundColourBrush}" />
                                    <TextBox Text="{Binding Path=DefaultStyle.ForegroundColour}"></TextBox>
                                </DockPanel>

                                <Label Grid.Row="4" Grid.Column="0">Hover foreground colour:</Label>
                                <DockPanel Grid.Row="4" Grid.Column="1">
                                    <Rectangle DockPanel.Dock="Left" Margin="0,0,10,0" Width="20" Height="15" VerticalAlignment="Center" Fill="{Binding Path=HoverStyle.ForegroundColourBrush}" />
                                    <TextBox Text="{Binding Path=HoverStyle.ForegroundColour}"></TextBox>
                                </DockPanel>

                                <Label Grid.Row="5" Grid.Column="0">Pressed foreground colour:</Label>
                                <DockPanel Grid.Row="5" Grid.Column="1">
                                    <Rectangle DockPanel.Dock="Left" Margin="0,0,10,0" Width="20" Height="15" VerticalAlignment="Center" Fill="{Binding Path=PressedStyle.ForegroundColourBrush}" />
                                    <TextBox Text="{Binding Path=PressedStyle.ForegroundColour}"></TextBox>
                                </DockPanel>

                                <Label Grid.Row="6" Grid.Column="0">Font size:</Label>
                                <DockPanel Grid.Row="6" Grid.Column="1">
                                    <TextBlock DockPanel.Dock="Left" Text="{Binding Path=DefaultStyle.FontSize}" Margin="0,0,10,0" Width="20"/>
                                    <Slider Minimum="2" Maximum="50" Value="{Binding Path=DefaultStyle.FontSize}" />
                                </DockPanel>
                                
                                <Label Grid.Row="7" Grid.Column="0">Hover font size:</Label>
                                <DockPanel Grid.Row="7" Grid.Column="1">
                                    <TextBlock DockPanel.Dock="Left" Text="{Binding Path=HoverStyle.FontSize}" Margin="0,0,10,0" Width="20"/>
                                    <Slider Minimum="2" Maximum="50" Value="{Binding Path=HoverStyle.FontSize}" />
                                </DockPanel>
                                
                                <Label Grid.Row="8" Grid.Column="0">Pressed font size:</Label>
                                <DockPanel Grid.Row="8" Grid.Column="1">
                                    <TextBlock DockPanel.Dock="Left" Text="{Binding Path=PressedStyle.FontSize}" Margin="0,0,10,0" Width="20"/>
                                    <Slider Minimum="2" Maximum="50" Value="{Binding Path=PressedStyle.FontSize}" />
                                </DockPanel>

                                <Label Grid.Row="9" Grid.Column="0">Font family:</Label>
                                <local:FontPicker
                                    Grid.Row="9" Grid.Column="1"  
                                    SelectedItem="{Binding Path=DefaultStyle.FontFamilyName}" />

                                <Label Grid.Row="10" Grid.Column="0">Hover font family:</Label>
                                <local:FontPicker
                                    Grid.Row="10" Grid.Column="1"  
                                    SelectedItem="{Binding Path=HoverStyle.FontFamilyName}" />

                                <Label Grid.Row="11" Grid.Column="0">Pressed font family:</Label>
                                <local:FontPicker
                                    Grid.Row="11" Grid.Column="1"  
                                    SelectedItem="{Binding Path=PressedStyle.FontFamilyName}" />

                                <Label Grid.Row="12" Grid.Column="0">Font weight:</Label>
                                <ComboBox
                                    Grid.Row="12" Grid.Column="1"
                                    SelectedItem="{Binding Path=DefaultStyle.FontWeightName}"
                                    ItemsSource="{Binding Path=DefaultStyle.FontWeights}"/>
                                
                                <Label Grid.Row="13" Grid.Column="0">Hover font weight:</Label>
                                <ComboBox
                                    Grid.Row="13" Grid.Column="1"
                                    SelectedItem="{Binding Path=HoverStyle.FontWeightName}"
                                    ItemsSource="{Binding Path=HoverStyle.FontWeights}"/>
                                
                                <Label Grid.Row="14" Grid.Column="0">Pressed font weight:</Label>
                                <ComboBox
                                    Grid.Row="14" Grid.Column="1"
                                    SelectedItem="{Binding Path=PressedStyle.FontWeightName}"
                                    ItemsSource="{Binding Path=PressedStyle.FontWeights}"/>

                                <Label Grid.Row="15" Grid.Column="0">Font style:</Label>
                                <ComboBox
                                    Grid.Row="15" Grid.Column="1"
                                    SelectedItem="{Binding Path=DefaultStyle.FontStyleName}"
                                    ItemsSource="{Binding Path=DefaultStyle.FontStyles}"/>

                                <Label Grid.Row="16" Grid.Column="0">Hover font style:</Label>
                                <ComboBox
                                    Grid.Row="16" Grid.Column="1"
                                    SelectedItem="{Binding Path=HoverStyle.FontStyleName}"
                                    ItemsSource="{Binding Path=HoverStyle.FontStyles}"/>

                                <Label Grid.Row="17" Grid.Column="0">Pressed font style:</Label>
                                <ComboBox
                                    Grid.Row="17" Grid.Column="1"
                                    SelectedItem="{Binding Path=PressedStyle.FontStyleName}"
                                    ItemsSource="{Binding Path=PressedStyle.FontStyles}"/>

                            </Grid>
                        </ScrollViewer>
                    </DockPanel>
                    

                    
                </TabItem>
            </TabControl>
            

        </Grid>

    </DockPanel>
</Window>
