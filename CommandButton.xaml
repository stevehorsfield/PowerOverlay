<UserControl x:Class="overlay_popup.CommandButton"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:clr="clr-namespace:System.Windows.Media.Converters;assembly=WindowsBase"
        xmlns:local="clr-namespace:overlay_popup"
        
             >
    <UserControl.Resources>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <ControlTemplate x:Key="ColouredButton" TargetType="{x:Type ButtonBase}">
            <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsDefaulted" Value="true">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="false">
                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="Green"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="true">
                    <!--<Setter Property="Background" TargetName="border" Value="{Binding Path=BackgroundHoverColourBrush}"/>-->
                    <!--<Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{Binding Path=ForegroundHoverColourBrush}"/>-->
                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="true">
                    <!--<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>-->
                    <!--<Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{Binding Path=ForegroundPressedColourBrush}"/>-->
                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <!--<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>-->
                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                    <!--<Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>-->
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </UserControl.Resources>
    <Border Padding="7" Visibility="{Binding Path=Visibility}">
        <Button Template="{DynamicResource ColouredButton}" Content="{Binding Path=Content}"
                Command="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=DataContext}"
                BorderThickness="0" Padding="3">
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Foreground" Value="{Binding DefaultStyle.ForegroundColourBrush}"/>
                    <Setter Property="Background" Value="{Binding DefaultStyle.BackgroundColourBrush}"/>
                    <Setter Property="FontSize" Value="{Binding DefaultStyle.FontSize}"/>
                    <Setter Property="FontFamily" Value="{Binding DefaultStyle.FontFamily}"/>
                    <Setter Property="FontWeight" Value="{Binding DefaultStyle.FontWeight}"/>
                    <Setter Property="FontStyle" Value="{Binding DefaultStyle.FontStyle}"/>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{Binding HoverStyle.BackgroundColourBrush}"/>
                            <Setter Property="Foreground" Value="{Binding HoverStyle.ForegroundColourBrush}"/>
                            <Setter Property="FontSize" Value="{Binding HoverStyle.FontSize}"/>
                            <Setter Property="FontFamily" Value="{Binding HoverStyle.FontFamily}"/>
                            <Setter Property="FontWeight" Value="{Binding HoverStyle.FontWeight}"/>
                            <Setter Property="FontStyle" Value="{Binding HoverStyle.FontStyle}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="{Binding PressedStyle.BackgroundColourBrush}"/>
                            <Setter Property="Foreground" Value="{Binding PressedStyle.ForegroundColourBrush}"/>
                            <Setter Property="FontSize" Value="{Binding PressedStyle.FontSize}"/>
                            <Setter Property="FontFamily" Value="{Binding PressedStyle.FontFamily}"/>
                            <Setter Property="FontWeight" Value="{Binding PressedStyle.FontWeight}"/>
                            <Setter Property="FontStyle" Value="{Binding PressedStyle.FontStyle}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{Binding DefaultStyle.BackgroundColourBrush}"/>
                            <Setter Property="Foreground" Value="{Binding DefaultStyle.ForegroundColourBrush}"/>
                            <Setter Property="FontFamily" Value="{Binding DefaultStyle.FontFamily}"/>
                            <Setter Property="FontSize" Value="{Binding DefaultStyle.FontSize}"/>
                            <Setter Property="FontWeight" Value="Thin" />
                            <Setter Property="FontStyle" Value="{Binding DefaultStyle.FontStyle}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
    </Border>
</UserControl>